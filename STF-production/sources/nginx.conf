user www-data;
worker_processes 4;
pid /run/nginx.pid;
# daemon off;

events {
	worker_connections 1024;
}

http {
	# Logging Settings
	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

    # tcp_nodelay on;
    # types_hash_max_size 2048;

   	upstream stf_app {
        server 127.0.0.1:7105 max_fails=0;
    }

    upstream stf_auth {
        server 127.0.0.1:7120 max_fails=0;
    }

    upstream stf_storage_apk {
        server 127.0.0.1:7104 max_fails=0;
    }

    upstream stf_storage_image {
        server 127.0.0.1:7103 max_fails=0;
    }

    upstream stf_storage {
        server 127.0.0.1:7102 max_fails=0;
    }

    upstream stf_websocket {
        server 127.0.0.1:7110 max_fails=0;
    }

    upstream stf_api {
        server 127.0.0.1:7106 max_fails=0;
    }


	types {
		application/javascript  js;
		image/gif               gif;
		image/jpeg              jpg;
		text/css                css;
		text/html               html;
	}

	map $http_upgrade $connection_upgrade {
		default  upgrade;
		''       close;
	}

	server {
		listen 80;
		server_name s2examplestf.net; # REPLACE ME
		return 301 https://$server_name$request_uri;
	}

	server {
		listen 443 ssl;
		server_name s2examplestf.net; # REPLACE ME
		keepalive_timeout 70;
		root /dev/null;

		# https://mozilla.github.io/server-side-tls/ssl-config-generator/
		ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
		ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;
		ssl_session_timeout 5m;
		ssl_session_cache shared:SSL:10m;
		ssl_dhparam /etc/nginx/ssl/dhparam.pem;
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
		ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
		ssl_prefer_server_ciphers on;

		#add_header Strict-Transport-Security max-age=15768000;

		#ssl_stapling on;
		#ssl_stapling_verify on;
		#ssl_trusted_certificate /etc/nginx/ssl/cert.pem;

		resolver 8.8.4.4 8.8.8.8 valid=300s;
		resolver_timeout 10s;

		# Handle stf-provider@floor4.service
		location ~ "^/d/floor4/([^/]+)/(?<port>[0-9]{4})/$" {
			proxy_pass http://127.0.0.1:$port/;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection $connection_upgrade;
			proxy_set_header X-Forwarded-For $remote_addr;
			proxy_set_header X-Real-IP $remote_addr;
		}

		location /auth/ {
			proxy_pass http://stf_auth/auth/;
		}

		location /api/ {
			proxy_pass http://stf_api/api/;
		}

		location /s/image/ {
			proxy_pass http://stf_storage_image;
		}

		location /s/apk/ {
			proxy_pass http://stf_storage_apk;
		}

		location /s/ {
			client_max_body_size 1024m;
			client_body_buffer_size 128k;
			proxy_pass http://stf_storage;
		}

		location /socket.io/ {
			proxy_pass http://stf_websocket;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection $connection_upgrade;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Real-IP $http_x_real_ip;
		}

		location / {
			proxy_pass http://stf_app;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Real-IP $http_x_real_ip;
		}
	}
}

